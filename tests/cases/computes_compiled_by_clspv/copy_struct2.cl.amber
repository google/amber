[comment]
Source code in OpenCL C:

typedef struct {
 float a, b, c, d;
} S;

typedef S InType;

S rep_ends_struct(InType in) {
  S val = {in.d, in.b, in.c, in.a};
  return val;
}

kernel void foo(global S* out, global InType* in) {
  uint i = get_global_id(0);
  out[i] = rep_ends_struct(in[i]);
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT of clspv = abc935edb700707dc33196fb57f5e3d5b2a80ff8

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 57
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %35 "foo" %gl_GlobalInvocationID
               OpSource OpenCL_C 120
               OpDecorate %20 SpecId 0
               OpDecorate %21 SpecId 1
               OpDecorate %22 SpecId 2
               OpMemberDecorate %_struct_2 0 Offset 0
               OpMemberDecorate %_struct_2 1 Offset 4
               OpMemberDecorate %_struct_2 2 Offset 8
               OpMemberDecorate %_struct_2 3 Offset 12
               OpDecorate %_runtimearr__struct_2 ArrayStride 16
               OpMemberDecorate %_struct_4 0 Offset 0
               OpDecorate %_struct_4 Block
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %25 DescriptorSet 0
               OpDecorate %25 Binding 0
               OpDecorate %26 DescriptorSet 0
               OpDecorate %26 Binding 1
      %float = OpTypeFloat 32
  %_struct_2 = OpTypeStruct %float %float %float %float
%_runtimearr__struct_2 = OpTypeRuntimeArray %_struct_2
  %_struct_4 = OpTypeStruct %_runtimearr__struct_2
%_ptr_StorageBuffer__struct_4 = OpTypePointer StorageBuffer %_struct_4
       %void = OpTypeVoid
          %7 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %13 = OpTypeFunction %_struct_2 %_struct_2
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %20 = OpSpecConstant %uint 1
         %21 = OpSpecConstant %uint 1
         %22 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %20 %21 %22
         %24 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %25 = OpVariable %_ptr_StorageBuffer__struct_4 StorageBuffer
         %26 = OpVariable %_ptr_StorageBuffer__struct_4 StorageBuffer
         %27 = OpFunction %_struct_2 Const %13
         %28 = OpFunctionParameter %_struct_2
         %29 = OpLabel
         %30 = OpCompositeExtract %float %28 0
         %31 = OpCompositeExtract %float %28 1
         %32 = OpCompositeExtract %float %28 2
         %33 = OpCompositeExtract %float %28 3
         %34 = OpCompositeConstruct %_struct_2 %33 %31 %32 %30
               OpReturnValue %34
               OpFunctionEnd
         %35 = OpFunction %void None %7
         %36 = OpLabel
         %37 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %38 = OpLoad %uint %37
         %39 = OpAccessChain %_ptr_StorageBuffer_float %26 %uint_0 %38 %uint_0
         %40 = OpLoad %float %39
         %41 = OpAccessChain %_ptr_StorageBuffer_float %26 %uint_0 %38 %uint_1
         %42 = OpLoad %float %41
         %43 = OpAccessChain %_ptr_StorageBuffer_float %26 %uint_0 %38 %uint_2
         %44 = OpLoad %float %43
         %45 = OpAccessChain %_ptr_StorageBuffer_float %26 %uint_0 %38 %uint_3
         %46 = OpLoad %float %45
         %47 = OpCompositeConstruct %_struct_2 %40 %42 %44 %46
         %48 = OpFunctionCall %_struct_2 %27 %47
         %49 = OpCompositeExtract %float %48 0
         %50 = OpCompositeExtract %float %48 1
         %51 = OpCompositeExtract %float %48 2
         %52 = OpCompositeExtract %float %48 3
         %53 = OpAccessChain %_ptr_StorageBuffer_float %25 %uint_0 %38 %uint_0
               OpStore %53 %49
         %54 = OpAccessChain %_ptr_StorageBuffer_float %25 %uint_0 %38 %uint_1
               OpStore %54 %50
         %55 = OpAccessChain %_ptr_StorageBuffer_float %25 %uint_0 %38 %uint_2
               OpStore %55 %51
         %56 = OpAccessChain %_ptr_StorageBuffer_float %25 %uint_0 %38 %uint_3
               OpStore %56 %52
               OpReturn
               OpFunctionEnd

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
ssbo 0 640
ssbo 1 subdata vec4 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159

compute entrypoint foo
compute 40 1 1

probe ssbo vec4 0 0 == 3 1 2 0
probe ssbo vec4 0 16 == 7 5 6 4
probe ssbo vec4 0 32 == 11 9 10 8
probe ssbo vec4 0 48 == 15 13 14 12
probe ssbo vec4 0 64 == 19 17 18 16
probe ssbo vec4 0 80 == 23 21 22 20
probe ssbo vec4 0 96 == 27 25 26 24
probe ssbo vec4 0 112 == 31 29 30 28
probe ssbo vec4 0 128 == 35 33 34 32
probe ssbo vec4 0 144 == 39 37 38 36
probe ssbo vec4 0 160 == 43 41 42 40
probe ssbo vec4 0 176 == 47 45 46 44
probe ssbo vec4 0 192 == 51 49 50 48
probe ssbo vec4 0 208 == 55 53 54 52
probe ssbo vec4 0 224 == 59 57 58 56
probe ssbo vec4 0 240 == 63 61 62 60
probe ssbo vec4 0 256 == 67 65 66 64
probe ssbo vec4 0 272 == 71 69 70 68
probe ssbo vec4 0 288 == 75 73 74 72
probe ssbo vec4 0 304 == 79 77 78 76
probe ssbo vec4 0 320 == 83 81 82 80
probe ssbo vec4 0 336 == 87 85 86 84
probe ssbo vec4 0 352 == 91 89 90 88
probe ssbo vec4 0 368 == 95 93 94 92
probe ssbo vec4 0 384 == 99 97 98 96
probe ssbo vec4 0 400 == 103 101 102 100
probe ssbo vec4 0 416 == 107 105 106 104
probe ssbo vec4 0 432 == 111 109 110 108
probe ssbo vec4 0 448 == 115 113 114 112
probe ssbo vec4 0 464 == 119 117 118 116
probe ssbo vec4 0 480 == 123 121 122 120
probe ssbo vec4 0 496 == 127 125 126 124
probe ssbo vec4 0 512 == 131 129 130 128
probe ssbo vec4 0 528 == 135 133 134 132
probe ssbo vec4 0 544 == 139 137 138 136
probe ssbo vec4 0 560 == 143 141 142 140
probe ssbo vec4 0 576 == 147 145 146 144
probe ssbo vec4 0 592 == 151 149 150 148
probe ssbo vec4 0 608 == 155 153 154 152
probe ssbo vec4 0 624 == 159 157 158 156

[comment]
Source code in OpenCL C:

#define NUM_ARRAY_ELEMENTS 18

typedef struct {
    float   arr[NUM_ARRAY_ELEMENTS];
} FloatArrayWrapper;

void FillOneElement(__global FloatArrayWrapper* outWrapper,
                    unsigned int wrapperIndex,
                    unsigned int elementIndex)
{
    __global FloatArrayWrapper* wrapper = &outWrapper[wrapperIndex];

    wrapper->arr[elementIndex] = sizeof(FloatArrayWrapper) * 10000.0f
                                 + wrapperIndex * 100.0f
                                 + (float) elementIndex;
}

__kernel void FillStructArray(__global FloatArrayWrapper* outWrapper)
{
    unsigned int x = get_global_id(0);

    for (unsigned int i = 0; i < NUM_ARRAY_ELEMENTS; ++i)
    {
        FillOneElement(outWrapper, x, i);
    }
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT = 8638849b2167fcba90dbff0ee4cfe7dbf0380d24

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 79
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %56 "main" %gl_GlobalInvocationID
               OpSource OpenCL_C 120
               OpDecorate %40 SpecId 0
               OpDecorate %41 SpecId 1
               OpDecorate %42 SpecId 2
               OpMemberDecorate %_struct_6 0 Offset 0
               OpDecorate %_runtimearr__struct_6 ArrayStride 72
               OpMemberDecorate %_struct_8 0 Offset 0
               OpDecorate %_struct_8 Block
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %45 DescriptorSet 0
               OpDecorate %45 Binding 0
               OpDecorate %_arr_float_uint_18 ArrayStride 4
       %uint = OpTypeInt 32 0
      %float = OpTypeFloat 32
    %uint_18 = OpConstant %uint 18
%_arr_float_uint_18 = OpTypeArray %float %uint_18
  %_struct_6 = OpTypeStruct %_arr_float_uint_18
%_runtimearr__struct_6 = OpTypeRuntimeArray %_struct_6
  %_struct_8 = OpTypeStruct %_runtimearr__struct_6
%_ptr_StorageBuffer__struct_8 = OpTypePointer StorageBuffer %_struct_8
       %void = OpTypeVoid
         %11 = OpTypeFunction %void
%_ptr_StorageBuffer__struct_6 = OpTypePointer StorageBuffer %_struct_6
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%_ptr_Input_uint = OpTypePointer Input %uint
         %16 = OpTypeFunction %void %_ptr_StorageBuffer__struct_6 %uint %uint
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_2 = OpConstant %uint 2
     %uint_3 = OpConstant %uint 3
     %uint_4 = OpConstant %uint 4
     %uint_5 = OpConstant %uint 5
     %uint_6 = OpConstant %uint 6
     %uint_7 = OpConstant %uint 7
     %uint_8 = OpConstant %uint 8
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
    %uint_11 = OpConstant %uint 11
    %uint_12 = OpConstant %uint 12
    %uint_13 = OpConstant %uint 13
    %uint_14 = OpConstant %uint 14
    %uint_15 = OpConstant %uint 15
    %uint_16 = OpConstant %uint 16
    %uint_17 = OpConstant %uint 17
  %float_100 = OpConstant %float 100
%float_720000 = OpConstant %float 720000
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %40 = OpSpecConstant %uint 1
         %41 = OpSpecConstant %uint 1
         %42 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %40 %41 %42
         %44 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %45 = OpVariable %_ptr_StorageBuffer__struct_8 StorageBuffer
         %46 = OpFunction %void None %16
         %47 = OpFunctionParameter %_ptr_StorageBuffer__struct_6
         %48 = OpFunctionParameter %uint
         %49 = OpFunctionParameter %uint
         %50 = OpLabel
         %51 = OpConvertUToF %float %48
         %52 = OpExtInst %float %1 Fma %51 %float_100 %float_720000
         %53 = OpConvertUToF %float %49
         %54 = OpFAdd %float %52 %53
         %55 = OpAccessChain %_ptr_StorageBuffer_float %45 %uint_0 %48 %uint_0 %49
               OpStore %55 %54
               OpReturn
               OpFunctionEnd
         %56 = OpFunction %void None %11
         %57 = OpLabel
         %58 = OpAccessChain %_ptr_StorageBuffer__struct_6 %45 %uint_0 %uint_0
         %59 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %60 = OpLoad %uint %59
         %61 = OpFunctionCall %void %46 %58 %60 %uint_0
         %62 = OpFunctionCall %void %46 %58 %60 %uint_1
         %63 = OpFunctionCall %void %46 %58 %60 %uint_2
         %64 = OpFunctionCall %void %46 %58 %60 %uint_3
         %65 = OpFunctionCall %void %46 %58 %60 %uint_4
         %66 = OpFunctionCall %void %46 %58 %60 %uint_5
         %67 = OpFunctionCall %void %46 %58 %60 %uint_6
         %68 = OpFunctionCall %void %46 %58 %60 %uint_7
         %69 = OpFunctionCall %void %46 %58 %60 %uint_8
         %70 = OpFunctionCall %void %46 %58 %60 %uint_9
         %71 = OpFunctionCall %void %46 %58 %60 %uint_10
         %72 = OpFunctionCall %void %46 %58 %60 %uint_11
         %73 = OpFunctionCall %void %46 %58 %60 %uint_12
         %74 = OpFunctionCall %void %46 %58 %60 %uint_13
         %75 = OpFunctionCall %void %46 %58 %60 %uint_14
         %76 = OpFunctionCall %void %46 %58 %60 %uint_15
         %77 = OpFunctionCall %void %46 %58 %60 %uint_16
         %78 = OpFunctionCall %void %46 %58 %60 %uint_17
               OpReturn
               OpFunctionEnd

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [bind] subdata [type] [offset] [values ...]
ssbo 0 subdata float   0  1.0  2.0  3.0  4.0  5.0  6.0  7.0  8.0  9.0 10.0 11.0 12.0 13.0 14.0 15.0 16.0 17.0 18.0
ssbo 0 subdata float  72 19.0 20.0 21.0 22.0 23.0 24.0 25.0 26.0 27.0 28.0 29.0 30.0 31.0 32.0 33.0 34.0 35.0 36.0
ssbo 0 subdata float 144 37.0 38.0 39.0 40.0 41.0 42.0 43.0 44.0 45.0 46.0 47.0 48.0 49.0 50.0 51.0 52.0 53.0 54.0

compute 3 1 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo float 0   0 < 10000.001
probe ssbo float 0   1 < 10001.001
probe ssbo float 0  72 < 10100.001
probe ssbo float 0  73 < 10101.001
probe ssbo float 0 144 < 10200.001
probe ssbo float 0 145 < 10201.001

probe ssbo float 0   0 >  9999.999
probe ssbo float 0   1 > 10000.999
probe ssbo float 0  72 > 10099.999
probe ssbo float 0  73 > 10100.999
probe ssbo float 0 144 > 10199.999
probe ssbo float 0 145 > 10200.999

[comment]
Source code in OpenCL C:

typedef struct { int arr[2]; } S1;
typedef struct { S1 s1; int a; S1 s2; } S2;

S2 make_s2(int n) {
    S2 s2;
    s2.s1.arr[0] = n;
    s2.s1.arr[1] = n+1;
    s2.a = n+2;
    s2.s2.arr[0] = n+3;
    s2.s2.arr[1] = n+4;
    return s2;
}

S2 choose(int n) {
    if (n > 0) return make_s2(n - 5);
    return make_s2(n + 10);
}

kernel void foo(global S2 *data, int n) {
    *data = choose(n);
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT = 8638849b2167fcba90dbff0ee4cfe7dbf0380d24

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 81
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %62 "foo"
               OpSource OpenCL_C 120
               OpDecorate %27 SpecId 0
               OpDecorate %28 SpecId 1
               OpDecorate %29 SpecId 2
               OpMemberDecorate %_struct_4 0 Offset 0
               OpMemberDecorate %_struct_5 0 Offset 0
               OpMemberDecorate %_struct_5 1 Offset 8
               OpMemberDecorate %_struct_5 2 Offset 12
               OpDecorate %_runtimearr__struct_5 ArrayStride 20
               OpMemberDecorate %_struct_7 0 Offset 0
               OpDecorate %_struct_7 Block
               OpMemberDecorate %_struct_9 0 Offset 0
               OpDecorate %_struct_9 Block
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %32 DescriptorSet 0
               OpDecorate %32 Binding 0
               OpDecorate %33 DescriptorSet 0
               OpDecorate %33 Binding 1
               OpDecorate %_arr_uint_uint_2 ArrayStride 4
       %uint = OpTypeInt 32 0
     %uint_2 = OpConstant %uint 2
%_arr_uint_uint_2 = OpTypeArray %uint %uint_2
  %_struct_4 = OpTypeStruct %_arr_uint_uint_2
  %_struct_5 = OpTypeStruct %_struct_4 %uint %_struct_4
%_runtimearr__struct_5 = OpTypeRuntimeArray %_struct_5
  %_struct_7 = OpTypeStruct %_runtimearr__struct_5
%_ptr_StorageBuffer__struct_7 = OpTypePointer StorageBuffer %_struct_7
  %_struct_9 = OpTypeStruct %uint
%_ptr_StorageBuffer__struct_9 = OpTypePointer StorageBuffer %_struct_9
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
         %14 = OpTypeFunction %_struct_5 %uint
       %bool = OpTypeBool
     %v3uint = OpTypeVector %uint 3
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
     %uint_3 = OpConstant %uint 3
     %uint_4 = OpConstant %uint 4
    %uint_10 = OpConstant %uint 10
         %23 = OpUndef %_struct_5
      %false = OpConstantFalse %bool
       %true = OpConstantTrue %bool
%uint_4294967291 = OpConstant %uint 4294967291
         %27 = OpSpecConstant %uint 1
         %28 = OpSpecConstant %uint 1
         %29 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %27 %28 %29
         %31 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %32 = OpVariable %_ptr_StorageBuffer__struct_7 StorageBuffer
         %33 = OpVariable %_ptr_StorageBuffer__struct_9 StorageBuffer
         %34 = OpFunction %_struct_5 Const %14
         %35 = OpFunctionParameter %uint
         %36 = OpLabel
         %37 = OpIAdd %uint %35 %uint_1
         %38 = OpIAdd %uint %35 %uint_2
         %39 = OpIAdd %uint %35 %uint_3
         %40 = OpIAdd %uint %35 %uint_4
         %41 = OpCompositeConstruct %_arr_uint_uint_2 %35 %37
         %42 = OpCompositeConstruct %_struct_4 %41
         %43 = OpCompositeConstruct %_arr_uint_uint_2 %39 %40
         %44 = OpCompositeConstruct %_struct_4 %43
         %45 = OpCompositeConstruct %_struct_5 %42 %38 %44
               OpReturnValue %45
               OpFunctionEnd
         %46 = OpFunction %_struct_5 Const %14
         %47 = OpFunctionParameter %uint
         %48 = OpLabel
         %49 = OpSGreaterThan %bool %47 %uint_0
         %50 = OpLogicalNot %bool %49
               OpSelectionMerge %54 None
               OpBranchConditional %50 %51 %54
         %51 = OpLabel
         %52 = OpIAdd %uint %47 %uint_10
         %53 = OpFunctionCall %_struct_5 %34 %52
               OpBranch %54
         %54 = OpLabel
         %56 = OpPhi %bool %false %51 %true %48
         %55 = OpPhi %_struct_5 %53 %51 %23 %48
               OpSelectionMerge %57 None
               OpBranchConditional %56 %59 %57
         %57 = OpLabel
         %58 = OpPhi %_struct_5 %55 %54 %61 %59
               OpReturnValue %58
         %59 = OpLabel
         %60 = OpIAdd %uint %47 %uint_4294967291
         %61 = OpFunctionCall %_struct_5 %34 %60
               OpBranch %57
               OpFunctionEnd
         %62 = OpFunction %void None %12
         %63 = OpLabel
         %64 = OpAccessChain %_ptr_StorageBuffer_uint %33 %uint_0
         %65 = OpLoad %uint %64
         %66 = OpFunctionCall %_struct_5 %46 %65
         %67 = OpCompositeExtract %_struct_4 %66 0
         %68 = OpCompositeExtract %_arr_uint_uint_2 %67 0
         %69 = OpCompositeExtract %uint %68 0
         %70 = OpCompositeExtract %uint %68 1
         %71 = OpCompositeExtract %uint %66 1
         %72 = OpCompositeExtract %_struct_4 %66 2
         %73 = OpCompositeExtract %_arr_uint_uint_2 %72 0
         %74 = OpCompositeExtract %uint %73 0
         %75 = OpCompositeExtract %uint %73 1
         %76 = OpAccessChain %_ptr_StorageBuffer_uint %32 %uint_0 %uint_0 %uint_0 %uint_0 %uint_0
               OpStore %76 %69
         %77 = OpAccessChain %_ptr_StorageBuffer_uint %32 %uint_0 %uint_0 %uint_0 %uint_0 %uint_1
               OpStore %77 %70
         %78 = OpAccessChain %_ptr_StorageBuffer_uint %32 %uint_0 %uint_0 %uint_1
               OpStore %78 %71
         %79 = OpAccessChain %_ptr_StorageBuffer_uint %32 %uint_0 %uint_0 %uint_2 %uint_0 %uint_0
               OpStore %79 %74
         %80 = OpAccessChain %_ptr_StorageBuffer_uint %32 %uint_0 %uint_0 %uint_2 %uint_0 %uint_1
               OpStore %80 %75
               OpReturn
               OpFunctionEnd
[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [bind] subdata [type] [offset] [values ...]
ssbo 0 subdata int 0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
ssbo 1 subdata int 0 13

compute entrypoint foo
compute 3 1 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo int 0 0 == 8
probe ssbo int 0 1 == 9
probe ssbo int 0 2 == 10
probe ssbo int 0 3 == 11
probe ssbo int 0 4 == 12

[comment]
Source code in OpenCL C:

struct a {
  int x;
  int y;
  float arr[5];
};

kernel void foo(global struct a* struct_out, int n) {
  struct a local_a;
  if (n == 0) {
    local_a.x = 0;
  }
  *struct_out = local_a;
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT of clspv = 145112789c63c5069d56a165bfbe480926e2b588

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 31
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %26 "foo"
               OpSource OpenCL_C 120
               OpDecorate %19 SpecId 0
               OpDecorate %20 SpecId 1
               OpDecorate %21 SpecId 2
               OpMemberDecorate %_struct_5 0 Offset 0
               OpMemberDecorate %_struct_5 1 Offset 4
               OpMemberDecorate %_struct_5 2 Offset 8
               OpDecorate %_runtimearr__struct_5 ArrayStride 28
               OpMemberDecorate %_struct_7 0 Offset 0
               OpDecorate %_struct_7 Block
               OpMemberDecorate %_struct_9 0 Offset 0
               OpDecorate %_struct_9 Block
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %24 DescriptorSet 0
               OpDecorate %24 Binding 0
               OpDecorate %25 DescriptorSet 0
               OpDecorate %25 Binding 1
               OpDecorate %_arr_float_uint_5 ArrayStride 4
       %uint = OpTypeInt 32 0
      %float = OpTypeFloat 32
     %uint_5 = OpConstant %uint 5
%_arr_float_uint_5 = OpTypeArray %float %uint_5
  %_struct_5 = OpTypeStruct %uint %uint %_arr_float_uint_5
%_runtimearr__struct_5 = OpTypeRuntimeArray %_struct_5
  %_struct_7 = OpTypeStruct %_runtimearr__struct_5
%_ptr_StorageBuffer__struct_7 = OpTypePointer StorageBuffer %_struct_7
  %_struct_9 = OpTypeStruct %uint
%_ptr_StorageBuffer__struct_9 = OpTypePointer StorageBuffer %_struct_9
       %void = OpTypeVoid
         %12 = OpTypeFunction %void
%_ptr_StorageBuffer__struct_5 = OpTypePointer StorageBuffer %_struct_5
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
     %v3uint = OpTypeVector %uint 3
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
     %uint_0 = OpConstant %uint 0
         %18 = OpConstantNull %_struct_5
         %19 = OpSpecConstant %uint 1
         %20 = OpSpecConstant %uint 1
         %21 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %19 %20 %21
         %23 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %24 = OpVariable %_ptr_StorageBuffer__struct_7 StorageBuffer
         %25 = OpVariable %_ptr_StorageBuffer__struct_9 StorageBuffer
         %26 = OpFunction %void None %12
         %27 = OpLabel
         %28 = OpAccessChain %_ptr_StorageBuffer__struct_5 %24 %uint_0 %uint_0
         %29 = OpAccessChain %_ptr_StorageBuffer_uint %25 %uint_0
         %30 = OpLoad %uint %29
               OpStore %28 %18
               OpReturn
               OpFunctionEnd
[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
ssbo 0:0 28
ssbo 0:1 subdata int 0 0

compute entrypoint foo
compute 1 1 1

probe ssbo int 0:0 0 == 0 0
probe ssbo float 0:0 8  == 0
probe ssbo float 0:0 12 == 0
probe ssbo float 0:0 16 == 0
probe ssbo float 0:0 20 == 0
probe ssbo float 0:0 24 == 0

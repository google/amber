[comment]
Source code in OpenCL C:

int KernelX()
{
    return get_global_id(0);
}

// Lookup table for the function 2^x, defined on the domain [0,9]
__constant float kTwoPowX[10] =
{
    1.0f,
    2.0f,
    4.0f,
    8.0f,
    16.0f,
    32.0f,
    64.0f,
    128.0f,
    256.0f,
    512.0f
};

__kernel void ReadConstantData(__global float* outDest, int inWidth)
{
    int index = KernelX();

    if (index < min((size_t)inWidth, (sizeof(kTwoPowX) / sizeof(kTwoPowX[0])))) {
        outDest[index] = kTwoPowX[index];
    }
    else {
        outDest[index] = -1.0f;
    }
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT of clspv = abc935edb700707dc33196fb57f5e3d5b2a80ff8

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 62
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %49 "ReadConstantData" %gl_GlobalInvocationID
               OpSource OpenCL_C 120
               OpDecorate %37 SpecId 0
               OpDecorate %38 SpecId 1
               OpDecorate %39 SpecId 2
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %_struct_4 0 Offset 0
               OpDecorate %_struct_4 Block
               OpMemberDecorate %_struct_7 0 Offset 0
               OpDecorate %_struct_7 Block
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %43 DescriptorSet 0
               OpDecorate %43 Binding 0
               OpDecorate %44 DescriptorSet 0
               OpDecorate %44 Binding 1
               OpDecorate %_arr_float_uint_10 ArrayStride 4
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
  %_struct_4 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer__struct_4 = OpTypePointer StorageBuffer %_struct_4
       %uint = OpTypeInt 32 0
  %_struct_7 = OpTypeStruct %uint
%_ptr_StorageBuffer__struct_7 = OpTypePointer StorageBuffer %_struct_7
       %void = OpTypeVoid
         %10 = OpTypeFunction %void
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
       %bool = OpTypeBool
    %uint_10 = OpConstant %uint 10
%_arr_float_uint_10 = OpTypeArray %float %uint_10
%_ptr_Private__arr_float_uint_10 = OpTypePointer Private %_arr_float_uint_10
%_ptr_Private_float = OpTypePointer Private %float
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %18 = OpTypeFunction %uint
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
     %uint_0 = OpConstant %uint 0
   %float_n1 = OpConstant %float -1
    %float_1 = OpConstant %float 1
    %float_2 = OpConstant %float 2
    %float_4 = OpConstant %float 4
    %float_8 = OpConstant %float 8
   %float_16 = OpConstant %float 16
   %float_32 = OpConstant %float 32
   %float_64 = OpConstant %float 64
  %float_128 = OpConstant %float 128
  %float_256 = OpConstant %float 256
  %float_512 = OpConstant %float 512
         %35 = OpConstantComposite %_arr_float_uint_10 %float_1 %float_2 %float_4 %float_8 %float_16 %float_32 %float_64 %float_128 %float_256 %float_512
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %37 = OpSpecConstant %uint 1
         %38 = OpSpecConstant %uint 1
         %39 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %37 %38 %39
         %41 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %42 = OpVariable %_ptr_Private__arr_float_uint_10 Private %35
         %43 = OpVariable %_ptr_StorageBuffer__struct_4 StorageBuffer
         %44 = OpVariable %_ptr_StorageBuffer__struct_7 StorageBuffer
         %45 = OpFunction %uint Pure %18
         %46 = OpLabel
         %47 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %48 = OpLoad %uint %47
               OpReturnValue %48
               OpFunctionEnd
         %49 = OpFunction %void None %10
         %50 = OpLabel
         %51 = OpAccessChain %_ptr_StorageBuffer_uint %44 %uint_0
         %52 = OpLoad %uint %51
         %53 = OpFunctionCall %uint %45
         %54 = OpExtInst %uint %1 UMin %52 %uint_10
         %55 = OpULessThan %bool %53 %54
               OpSelectionMerge %59 None
               OpBranchConditional %55 %56 %59
         %56 = OpLabel
         %57 = OpAccessChain %_ptr_Private_float %42 %53
         %58 = OpLoad %float %57
               OpBranch %59
         %59 = OpLabel
         %60 = OpPhi %float %float_n1 %50 %58 %56
         %61 = OpAccessChain %_ptr_StorageBuffer_float %43 %uint_0 %53
               OpStore %61 %60
               OpReturn
               OpFunctionEnd

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
ssbo 0 80
ssbo 1 subdata int 0 8

compute entrypoint ReadConstantData
compute 20 1 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo float 0 0  == 1.0
probe ssbo float 0 4  == 2.0
probe ssbo float 0 8  == 4.0
probe ssbo float 0 12 == 8.0
probe ssbo float 0 16 == 16.0
probe ssbo float 0 20 == 32.0
probe ssbo float 0 24 == 64.0
probe ssbo float 0 28 == 128.0
probe ssbo float 0 32 == -1.0
probe ssbo float 0 36 == -1.0
probe ssbo float 0 40 == -1.0
probe ssbo float 0 44 == -1.0
probe ssbo float 0 48 == -1.0
probe ssbo float 0 52 == -1.0
probe ssbo float 0 56 == -1.0
probe ssbo float 0 60 == -1.0
probe ssbo float 0 64 == -1.0
probe ssbo float 0 68 == -1.0
probe ssbo float 0 72 == -1.0
probe ssbo float 0 76 == -1.0

[comment]
Source code in OpenGL:

#version 430

struct S {
  float a;
  float b;
  float c;
  float d;
};

layout (set = 0, binding = 0) buffer outDat {
  S data[];
} OBuf;

layout (set = 0, binding = 1) buffer inDat {
  // vec4 data[];
  S data[];
} IBuf;

void main() {
  uint x = gl_GlobalInvocationID.x;
  S inval = IBuf.data[x];
  S val;
  val.a = inval.d;
  val.b = inval.b;
  val.c = inval.c;
  val.d = inval.a;
  OBuf.data[x] = val;
}

The following SPIR-V code was generated by glslangValidator with -Od option.
GIT_COMMIT of glslangValidator = f658c3033bb482af1a24b40414c9a5c3057187d8

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 7
; Bound: 72
; Schema: 0
               OpCapability Shader
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %main "main" %gl_GlobalInvocationID
               OpExecutionMode %main LocalSize 1 1 1
               OpSource GLSL 430
               OpName %main "main"
               OpName %x "x"
               OpName %gl_GlobalInvocationID "gl_GlobalInvocationID"
               OpName %S "S"
               OpMemberName %S 0 "a"
               OpMemberName %S 1 "b"
               OpMemberName %S 2 "c"
               OpMemberName %S 3 "d"
               OpName %inval "inval"
               OpName %S_0 "S"
               OpMemberName %S_0 0 "a"
               OpMemberName %S_0 1 "b"
               OpMemberName %S_0 2 "c"
               OpMemberName %S_0 3 "d"
               OpName %inDat "inDat"
               OpMemberName %inDat 0 "data"
               OpName %IBuf "IBuf"
               OpName %val "val"
               OpName %outDat "outDat"
               OpMemberName %outDat 0 "data"
               OpName %OBuf "OBuf"
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpMemberDecorate %S_0 0 Offset 0
               OpMemberDecorate %S_0 1 Offset 4
               OpMemberDecorate %S_0 2 Offset 8
               OpMemberDecorate %S_0 3 Offset 12
               OpDecorate %_runtimearr_S_0 ArrayStride 16
               OpMemberDecorate %inDat 0 Offset 0
               OpDecorate %inDat BufferBlock
               OpDecorate %IBuf DescriptorSet 0
               OpDecorate %IBuf Binding 1
               OpDecorate %_runtimearr_S_0_0 ArrayStride 16
               OpMemberDecorate %outDat 0 Offset 0
               OpDecorate %outDat BufferBlock
               OpDecorate %OBuf DescriptorSet 0
               OpDecorate %OBuf Binding 0
       %void = OpTypeVoid
          %3 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_Function_uint = OpTypePointer Function %uint
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
     %uint_0 = OpConstant %uint 0
%_ptr_Input_uint = OpTypePointer Input %uint
      %float = OpTypeFloat 32
          %S = OpTypeStruct %float %float %float %float
%_ptr_Function_S = OpTypePointer Function %S
        %S_0 = OpTypeStruct %float %float %float %float
%_runtimearr_S_0 = OpTypeRuntimeArray %S_0
      %inDat = OpTypeStruct %_runtimearr_S_0
%_ptr_Uniform_inDat = OpTypePointer Uniform %inDat
       %IBuf = OpVariable %_ptr_Uniform_inDat Uniform
        %int = OpTypeInt 32 1
      %int_0 = OpConstant %int 0
%_ptr_Uniform_S_0 = OpTypePointer Uniform %S_0
%_ptr_Function_float = OpTypePointer Function %float
      %int_1 = OpConstant %int 1
      %int_2 = OpConstant %int 2
      %int_3 = OpConstant %int 3
%_runtimearr_S_0_0 = OpTypeRuntimeArray %S_0
     %outDat = OpTypeStruct %_runtimearr_S_0_0
%_ptr_Uniform_outDat = OpTypePointer Uniform %outDat
       %OBuf = OpVariable %_ptr_Uniform_outDat Uniform
%_ptr_Uniform_float = OpTypePointer Uniform %float
       %main = OpFunction %void None %3
          %5 = OpLabel
          %x = OpVariable %_ptr_Function_uint Function
      %inval = OpVariable %_ptr_Function_S Function
        %val = OpVariable %_ptr_Function_S Function
         %14 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %15 = OpLoad %uint %14
               OpStore %x %15
         %27 = OpLoad %uint %x
         %29 = OpAccessChain %_ptr_Uniform_S_0 %IBuf %int_0 %27
         %30 = OpLoad %S_0 %29
         %31 = OpCompositeExtract %float %30 0
         %33 = OpAccessChain %_ptr_Function_float %inval %int_0
               OpStore %33 %31
         %34 = OpCompositeExtract %float %30 1
         %36 = OpAccessChain %_ptr_Function_float %inval %int_1
               OpStore %36 %34
         %37 = OpCompositeExtract %float %30 2
         %39 = OpAccessChain %_ptr_Function_float %inval %int_2
               OpStore %39 %37
         %40 = OpCompositeExtract %float %30 3
         %42 = OpAccessChain %_ptr_Function_float %inval %int_3
               OpStore %42 %40
         %44 = OpAccessChain %_ptr_Function_float %inval %int_3
         %45 = OpLoad %float %44
         %46 = OpAccessChain %_ptr_Function_float %val %int_0
               OpStore %46 %45
         %47 = OpAccessChain %_ptr_Function_float %inval %int_1
         %48 = OpLoad %float %47
         %49 = OpAccessChain %_ptr_Function_float %val %int_1
               OpStore %49 %48
         %50 = OpAccessChain %_ptr_Function_float %inval %int_2
         %51 = OpLoad %float %50
         %52 = OpAccessChain %_ptr_Function_float %val %int_2
               OpStore %52 %51
         %53 = OpAccessChain %_ptr_Function_float %inval %int_0
         %54 = OpLoad %float %53
         %55 = OpAccessChain %_ptr_Function_float %val %int_3
               OpStore %55 %54
         %60 = OpLoad %uint %x
         %61 = OpLoad %S %val
         %62 = OpAccessChain %_ptr_Uniform_S_0 %OBuf %int_0 %60
         %63 = OpCompositeExtract %float %61 0
         %65 = OpAccessChain %_ptr_Uniform_float %62 %int_0
               OpStore %65 %63
         %66 = OpCompositeExtract %float %61 1
         %67 = OpAccessChain %_ptr_Uniform_float %62 %int_1
               OpStore %67 %66
         %68 = OpCompositeExtract %float %61 2
         %69 = OpAccessChain %_ptr_Uniform_float %62 %int_2
               OpStore %69 %68
         %70 = OpCompositeExtract %float %61 3
         %71 = OpAccessChain %_ptr_Uniform_float %62 %int_3
               OpStore %71 %70
               OpReturn
               OpFunctionEnd
[test]
ssbo 0 640
ssbo 1 subdata vec4 0 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159

compute 40 1 1

probe ssbo vec4 0 0 == 3 1 2 0
probe ssbo vec4 0 16 == 7 5 6 4
probe ssbo vec4 0 32 == 11 9 10 8
probe ssbo vec4 0 48 == 15 13 14 12
probe ssbo vec4 0 64 == 19 17 18 16
probe ssbo vec4 0 80 == 23 21 22 20
probe ssbo vec4 0 96 == 27 25 26 24
probe ssbo vec4 0 112 == 31 29 30 28
probe ssbo vec4 0 128 == 35 33 34 32
probe ssbo vec4 0 144 == 39 37 38 36
probe ssbo vec4 0 160 == 43 41 42 40
probe ssbo vec4 0 176 == 47 45 46 44
probe ssbo vec4 0 192 == 51 49 50 48
probe ssbo vec4 0 208 == 55 53 54 52
probe ssbo vec4 0 224 == 59 57 58 56
probe ssbo vec4 0 240 == 63 61 62 60
probe ssbo vec4 0 256 == 67 65 66 64
probe ssbo vec4 0 272 == 71 69 70 68
probe ssbo vec4 0 288 == 75 73 74 72
probe ssbo vec4 0 304 == 79 77 78 76
probe ssbo vec4 0 320 == 83 81 82 80
probe ssbo vec4 0 336 == 87 85 86 84
probe ssbo vec4 0 352 == 91 89 90 88
probe ssbo vec4 0 368 == 95 93 94 92
probe ssbo vec4 0 384 == 99 97 98 96
probe ssbo vec4 0 400 == 103 101 102 100
probe ssbo vec4 0 416 == 107 105 106 104
probe ssbo vec4 0 432 == 111 109 110 108
probe ssbo vec4 0 448 == 115 113 114 112
probe ssbo vec4 0 464 == 119 117 118 116
probe ssbo vec4 0 480 == 123 121 122 120
probe ssbo vec4 0 496 == 127 125 126 124
probe ssbo vec4 0 512 == 131 129 130 128
probe ssbo vec4 0 528 == 135 133 134 132
probe ssbo vec4 0 544 == 139 137 138 136
probe ssbo vec4 0 560 == 143 141 142 140
probe ssbo vec4 0 576 == 147 145 146 144
probe ssbo vec4 0 592 == 151 149 150 148
probe ssbo vec4 0 608 == 155 153 154 152
probe ssbo vec4 0 624 == 159 157 158 156

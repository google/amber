[comment]
From
https://github.com/dneto0/ClspvTest/blob/b9-snapshot/app/src/main/kernels/Fills.cl

Source code in OpenCL C:

int KernelX()
{
    return get_global_id(0);
}

int KernelY()
{
    return get_global_id(1);
}

void WriteFloat4(
    float4              inPixel,
    __global float4*    outImage,
    int                 inIndex,
    bool                is16Bit)
{
    if (is16Bit)
    {
        vstore_half4_rtz(inPixel, inIndex, (__global half*)outImage);
    }
    else
    {
        outImage[inIndex] = inPixel;
    }
}

void WritePixelIndex(
    float4              inPixel,
    __global float4*    outImage,
    bool                is16Bit,
    int                 inIndex)
{
    WriteFloat4(inPixel, outImage, inIndex, is16Bit);
}

void WritePixel(
    float4              inPixel,
    __global float4*    outImage,
    int                 inPitch,
    bool                is16Bit,
    int                 inX,
    int                 inY)
{
    WritePixelIndex(inPixel, outImage, is16Bit, mul24(inY, inPitch) + inX);
}

__kernel void FillWithColorKernel(
    __global float4*    outImage,
    int                 inPitch,
    int                 inDeviceFormat,
    int                 inOffsetX,
    int                 inOffsetY,
    int                 inWidth,
    int                 inHeight,
    float4              inColor)
{
    int x = KernelX();
    int y = KernelY();

    if (x < inWidth && y < inHeight)
    {
        WritePixel(inColor, outImage, inPitch, inDeviceFormat == 0, x + inOffsetX, y + inOffsetY);
    }
}


The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT = abc935edb700707dc33196fb57f5e3d5b2a80ff8

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 138
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %110 "FillWithColorKernel" %gl_GlobalInvocationID
               OpSource OpenCL_C 120
               OpDecorate %42 SpecId 0
               OpDecorate %43 SpecId 1
               OpDecorate %44 SpecId 2
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %_struct_7 0 Offset 0
               OpDecorate %_struct_7 Block
               OpMemberDecorate %_struct_10 0 Offset 0
               OpDecorate %_struct_10 Block
               OpMemberDecorate %_struct_12 0 Offset 0
               OpDecorate %_struct_12 Block
               OpDecorate %35 DescriptorSet 0
               OpDecorate %35 Binding 0
               OpDecorate %36 DescriptorSet 0
               OpDecorate %36 Binding 1
               OpDecorate %37 DescriptorSet 0
               OpDecorate %37 Binding 2
               OpDecorate %38 DescriptorSet 0
               OpDecorate %38 Binding 3
               OpDecorate %39 DescriptorSet 0
               OpDecorate %39 Binding 4
               OpDecorate %40 DescriptorSet 0
               OpDecorate %40 Binding 5
               OpDecorate %gl_GlobalInvocationID BuiltIn GlobalInvocationId
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %47 DescriptorSet 1
               OpDecorate %47 Binding 0
               OpDecorate %48 DescriptorSet 1
               OpDecorate %48 Binding 1
               OpDecorate %49 DescriptorSet 1
               OpDecorate %49 Binding 2
               OpDecorate %50 DescriptorSet 1
               OpDecorate %50 Binding 3
               OpDecorate %51 DescriptorSet 1
               OpDecorate %51 Binding 4
               OpDecorate %52 DescriptorSet 1
               OpDecorate %52 Binding 5
               OpDecorate %53 DescriptorSet 1
               OpDecorate %53 Binding 6
               OpDecorate %54 DescriptorSet 1
               OpDecorate %54 Binding 7
          %2 = OpTypeSampler
%_ptr_UniformConstant_2 = OpTypePointer UniformConstant %2
      %float = OpTypeFloat 32
    %v4float = OpTypeVector %float 4
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
  %_struct_7 = OpTypeStruct %_runtimearr_v4float
%_ptr_StorageBuffer__struct_7 = OpTypePointer StorageBuffer %_struct_7
       %uint = OpTypeInt 32 0
 %_struct_10 = OpTypeStruct %uint
%_ptr_StorageBuffer__struct_10 = OpTypePointer StorageBuffer %_struct_10
 %_struct_12 = OpTypeStruct %v4float
%_ptr_StorageBuffer__struct_12 = OpTypePointer StorageBuffer %_struct_12
       %void = OpTypeVoid
         %15 = OpTypeFunction %void
%_ptr_StorageBuffer_v4float = OpTypePointer StorageBuffer %v4float
%_ptr_StorageBuffer_uint = OpTypePointer StorageBuffer %uint
       %bool = OpTypeBool
         %19 = OpTypeFunction %uint
     %v3uint = OpTypeVector %uint 3
%_ptr_Input_v3uint = OpTypePointer Input %v3uint
%_ptr_Input_uint = OpTypePointer Input %uint
         %23 = OpTypeFunction %void %v4float %_ptr_StorageBuffer_v4float %uint %bool
    %v2float = OpTypeVector %float 2
     %v2uint = OpTypeVector %uint 2
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
         %27 = OpTypeFunction %void %v4float %_ptr_StorageBuffer_v4float %bool %uint
         %28 = OpTypeFunction %void %v4float %_ptr_StorageBuffer_v4float %uint %bool %uint %uint
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
      %false = OpConstantFalse %bool
       %true = OpConstantTrue %bool
         %34 = OpUndef %v4float
         %35 = OpVariable %_ptr_UniformConstant_2 UniformConstant
         %36 = OpVariable %_ptr_UniformConstant_2 UniformConstant
         %37 = OpVariable %_ptr_UniformConstant_2 UniformConstant
         %38 = OpVariable %_ptr_UniformConstant_2 UniformConstant
         %39 = OpVariable %_ptr_UniformConstant_2 UniformConstant
         %40 = OpVariable %_ptr_UniformConstant_2 UniformConstant
%gl_GlobalInvocationID = OpVariable %_ptr_Input_v3uint Input
         %42 = OpSpecConstant %uint 1
         %43 = OpSpecConstant %uint 1
         %44 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %42 %43 %44
         %46 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %47 = OpVariable %_ptr_StorageBuffer__struct_7 StorageBuffer
         %48 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %49 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %50 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %51 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %52 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %53 = OpVariable %_ptr_StorageBuffer__struct_10 StorageBuffer
         %54 = OpVariable %_ptr_StorageBuffer__struct_12 StorageBuffer
         %55 = OpFunction %uint Pure %19
         %56 = OpLabel
         %57 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_0
         %58 = OpLoad %uint %57
               OpReturnValue %58
               OpFunctionEnd
         %59 = OpFunction %uint Pure %19
         %60 = OpLabel
         %61 = OpAccessChain %_ptr_Input_uint %gl_GlobalInvocationID %uint_1
         %62 = OpLoad %uint %61
               OpReturnValue %62
               OpFunctionEnd
         %63 = OpFunction %void None %23
         %64 = OpFunctionParameter %v4float
         %65 = OpFunctionParameter %_ptr_StorageBuffer_v4float
         %66 = OpFunctionParameter %uint
         %67 = OpFunctionParameter %bool
         %68 = OpLabel
         %69 = OpLogicalNot %bool %67
               OpSelectionMerge %72 None
               OpBranchConditional %69 %70 %72
         %70 = OpLabel
         %71 = OpAccessChain %_ptr_StorageBuffer_v4float %47 %uint_0 %66
               OpStore %71 %64
               OpBranch %72
         %72 = OpLabel
         %73 = OpPhi %bool %false %70 %true %68
               OpSelectionMerge %74 None
               OpBranchConditional %73 %75 %74
         %74 = OpLabel
               OpReturn
         %75 = OpLabel
         %76 = OpVectorShuffle %v2float %64 %34 0 1
         %77 = OpVectorShuffle %v2float %64 %34 2 3
         %78 = OpExtInst %uint %1 PackHalf2x16 %76
         %79 = OpExtInst %uint %1 PackHalf2x16 %77
         %80 = OpCompositeConstruct %v2uint %78 %79
         %81 = OpShiftRightLogical %uint %66 %uint_1
         %82 = OpBitcast %v2float %80
         %83 = OpCompositeExtract %float %82 0
         %84 = OpCompositeExtract %float %82 1
         %85 = OpBitwiseAnd %uint %66 %uint_1
         %86 = OpShiftLeftLogical %uint %85 %uint_1
         %87 = OpAccessChain %_ptr_StorageBuffer_float %47 %uint_0 %81 %86
               OpStore %87 %83
         %88 = OpIAdd %uint %86 %uint_1
         %89 = OpAccessChain %_ptr_StorageBuffer_float %47 %uint_0 %81 %88
               OpStore %89 %84
               OpBranch %74
               OpFunctionEnd
         %90 = OpFunction %void None %27
         %91 = OpFunctionParameter %v4float
         %92 = OpFunctionParameter %_ptr_StorageBuffer_v4float
         %93 = OpFunctionParameter %bool
         %94 = OpFunctionParameter %uint
         %95 = OpLabel
         %96 = OpAccessChain %_ptr_StorageBuffer_v4float %47 %uint_0 %uint_0
         %97 = OpFunctionCall %void %63 %91 %96 %94 %93
               OpReturn
               OpFunctionEnd
         %98 = OpFunction %void None %28
         %99 = OpFunctionParameter %v4float
        %100 = OpFunctionParameter %_ptr_StorageBuffer_v4float
        %101 = OpFunctionParameter %uint
        %102 = OpFunctionParameter %bool
        %103 = OpFunctionParameter %uint
        %104 = OpFunctionParameter %uint
        %105 = OpLabel
        %106 = OpAccessChain %_ptr_StorageBuffer_v4float %47 %uint_0 %uint_0
        %107 = OpIMul %uint %104 %101
        %108 = OpIAdd %uint %107 %103
        %109 = OpFunctionCall %void %90 %99 %106 %102 %108
               OpReturn
               OpFunctionEnd
        %110 = OpFunction %void None %15
        %111 = OpLabel
        %112 = OpAccessChain %_ptr_StorageBuffer_v4float %47 %uint_0 %uint_0
        %113 = OpAccessChain %_ptr_StorageBuffer_uint %48 %uint_0
        %114 = OpLoad %uint %113
        %115 = OpAccessChain %_ptr_StorageBuffer_uint %49 %uint_0
        %116 = OpLoad %uint %115
        %117 = OpAccessChain %_ptr_StorageBuffer_uint %50 %uint_0
        %118 = OpLoad %uint %117
        %119 = OpAccessChain %_ptr_StorageBuffer_uint %51 %uint_0
        %120 = OpLoad %uint %119
        %121 = OpAccessChain %_ptr_StorageBuffer_uint %52 %uint_0
        %122 = OpLoad %uint %121
        %123 = OpAccessChain %_ptr_StorageBuffer_uint %53 %uint_0
        %124 = OpLoad %uint %123
        %125 = OpAccessChain %_ptr_StorageBuffer_v4float %54 %uint_0
        %126 = OpLoad %v4float %125
        %127 = OpFunctionCall %uint %55
        %128 = OpFunctionCall %uint %59
        %129 = OpSLessThan %bool %127 %122
        %130 = OpSLessThan %bool %128 %124
        %131 = OpLogicalAnd %bool %129 %130
               OpSelectionMerge %137 None
               OpBranchConditional %131 %132 %137
        %132 = OpLabel
        %133 = OpIEqual %bool %116 %uint_0
        %134 = OpIAdd %uint %127 %118
        %135 = OpIAdd %uint %128 %120
        %136 = OpFunctionCall %void %98 %126 %112 %114 %133 %134 %135
               OpBranch %137
        %137 = OpLabel
               OpReturn
               OpFunctionEnd

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [bind] subdata [type] [offset] [values ...]
ssbo 0 384
ssbo 1 subdata int  0 4
ssbo 2 subdata int  0 1
ssbo 3 subdata int  0 1
ssbo 4 subdata int  0 3
ssbo 5 subdata int  0 3
ssbo 6 subdata int  0 2
ssbo 7 subdata vec4 0 1.0 1.0 1.0 1.0

compute entrypoint FillWithColorKernel
compute 4 6 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo vec4 0 208 < 1.00001 1.00001 1.00001 1.00001
probe ssbo vec4 0 224 < 1.00001 1.00001 1.00001 1.00001
probe ssbo vec4 0 240 < 1.00001 1.00001 1.00001 1.00001
probe ssbo vec4 0 272 < 1.00001 1.00001 1.00001 1.00001
probe ssbo vec4 0 288 < 1.00001 1.00001 1.00001 1.00001
probe ssbo vec4 0 304 < 1.00001 1.00001 1.00001 1.00001

probe ssbo vec4 0 208 > 0.99999 0.99999 0.99999 0.99999
probe ssbo vec4 0 224 > 0.99999 0.99999 0.99999 0.99999
probe ssbo vec4 0 240 > 0.99999 0.99999 0.99999 0.99999
probe ssbo vec4 0 272 > 0.99999 0.99999 0.99999 0.99999
probe ssbo vec4 0 288 > 0.99999 0.99999 0.99999 0.99999
probe ssbo vec4 0 304 > 0.99999 0.99999 0.99999 0.99999

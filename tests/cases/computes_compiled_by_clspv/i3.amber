[comment]
Source code in OpenCL C:

kernel void main(global float *out, float x, float y) {

  int first_result;

  if (y >= 1.1f) {
    if (x > 0) {
      first_result = 0;
    } else {
      first_result = 1;
    }
  } else if (y >= 1.2f) {
    if (x > 0) {
      first_result = 2;
    } else {
      first_result = 3;
    }
  } else {
    if (y + 1.0f > 0) {
      first_result = 4;
    } else {
      first_result = 5;
    }
  }

  float fr = (float)(first_result);

  float result = -1.0f;
  if (fr == 0)
    result = 1.0f;
  else if (fr == 1)
    result = 0.0f;
  else if (fr == 2)
    result = 2.0f;

  *out = result;
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT = 8638849b2167fcba90dbff0ee4cfe7dbf0380d24

[compute shader spirv]
; SPIR-V
; Version: 1.0
; Generator: Codeplay; 0
; Bound: 114
; Schema: 0
               OpCapability Shader
               OpCapability VariablePointers
               OpExtension "SPV_KHR_storage_buffer_storage_class"
               OpExtension "SPV_KHR_variable_pointers"
               OpMemoryModel Logical GLSL450
               OpEntryPoint GLCompute %38 "main"
               OpSource OpenCL_C 120
               OpDecorate %30 SpecId 0
               OpDecorate %31 SpecId 1
               OpDecorate %32 SpecId 2
               OpDecorate %_runtimearr_float ArrayStride 4
               OpMemberDecorate %_struct_3 0 Offset 0
               OpDecorate %_struct_3 Block
               OpMemberDecorate %_struct_5 0 Offset 0
               OpDecorate %_struct_5 Block
               OpDecorate %gl_WorkGroupSize BuiltIn WorkgroupSize
               OpDecorate %35 DescriptorSet 0
               OpDecorate %35 Binding 0
               OpDecorate %36 DescriptorSet 0
               OpDecorate %36 Binding 1
               OpDecorate %37 DescriptorSet 0
               OpDecorate %37 Binding 2
      %float = OpTypeFloat 32
%_runtimearr_float = OpTypeRuntimeArray %float
  %_struct_3 = OpTypeStruct %_runtimearr_float
%_ptr_StorageBuffer__struct_3 = OpTypePointer StorageBuffer %_struct_3
  %_struct_5 = OpTypeStruct %float
%_ptr_StorageBuffer__struct_5 = OpTypePointer StorageBuffer %_struct_5
       %void = OpTypeVoid
          %8 = OpTypeFunction %void
       %uint = OpTypeInt 32 0
%_ptr_StorageBuffer_float = OpTypePointer StorageBuffer %float
       %bool = OpTypeBool
     %v3uint = OpTypeVector %uint 3
%_ptr_Private_v3uint = OpTypePointer Private %v3uint
     %uint_0 = OpConstant %uint 0
     %uint_1 = OpConstant %uint 1
  %float_1_1 = OpConstant %float 1.1
    %float_0 = OpConstant %float 0
         %18 = OpUndef %uint
      %false = OpConstantFalse %bool
       %true = OpConstantTrue %bool
     %uint_2 = OpConstant %uint 2
    %float_2 = OpConstant %float 2
         %23 = OpUndef %float
    %float_1 = OpConstant %float 1
   %float_n1 = OpConstant %float -1
  %float_1_2 = OpConstant %float 1.2
     %uint_3 = OpConstant %uint 3
     %uint_4 = OpConstant %uint 4
     %uint_5 = OpConstant %uint 5
         %30 = OpSpecConstant %uint 1
         %31 = OpSpecConstant %uint 1
         %32 = OpSpecConstant %uint 1
%gl_WorkGroupSize = OpSpecConstantComposite %v3uint %30 %31 %32
         %34 = OpVariable %_ptr_Private_v3uint Private %gl_WorkGroupSize
         %35 = OpVariable %_ptr_StorageBuffer__struct_3 StorageBuffer
         %36 = OpVariable %_ptr_StorageBuffer__struct_5 StorageBuffer
         %37 = OpVariable %_ptr_StorageBuffer__struct_5 StorageBuffer
         %38 = OpFunction %void None %8
         %39 = OpLabel
         %40 = OpAccessChain %_ptr_StorageBuffer_float %35 %uint_0 %uint_0
         %41 = OpAccessChain %_ptr_StorageBuffer_float %36 %uint_0
         %42 = OpLoad %float %41
         %43 = OpAccessChain %_ptr_StorageBuffer_float %37 %uint_0
         %44 = OpLoad %float %43
         %45 = OpFUnordLessThan %bool %44 %float_1_1
         %46 = OpLogicalNot %bool %45
               OpSelectionMerge %50 None
               OpBranchConditional %46 %47 %50
         %47 = OpLabel
         %48 = OpFUnordLessThanEqual %bool %42 %float_0
         %49 = OpSelect %uint %48 %uint_1 %uint_0
               OpBranch %50
         %50 = OpLabel
         %52 = OpPhi %bool %false %47 %true %39
         %51 = OpPhi %uint %49 %47 %18 %39
               OpSelectionMerge %53 None
               OpBranchConditional %52 %99 %53
         %53 = OpLabel
         %54 = OpPhi %uint %51 %50 %109 %108
               OpBranch %55
         %55 = OpLabel
         %56 = OpSLessThan %bool %54 %uint_1
         %57 = OpLogicalNot %bool %56
               OpSelectionMerge %73 None
               OpBranchConditional %57 %58 %73
         %58 = OpLabel
         %59 = OpSLessThan %bool %54 %uint_2
         %60 = OpLogicalNot %bool %59
               OpSelectionMerge %68 None
               OpBranchConditional %60 %61 %68
         %61 = OpLabel
         %62 = OpIEqual %bool %54 %uint_2
               OpSelectionMerge %64 None
               OpBranchConditional %62 %63 %64
         %63 = OpLabel
               OpBranch %64
         %64 = OpLabel
         %67 = OpPhi %bool %false %63 %true %61
         %66 = OpPhi %bool %true %63 %false %61
         %65 = OpPhi %float %float_2 %63 %23 %61
               OpBranch %68
         %68 = OpLabel
         %72 = OpPhi %bool %67 %64 %false %58
         %71 = OpPhi %bool %66 %64 %false %58
         %70 = OpPhi %bool %false %64 %true %58
         %69 = OpPhi %float %65 %64 %23 %58
               OpBranch %73
         %73 = OpLabel
         %79 = OpPhi %bool %false %68 %true %55
         %78 = OpPhi %bool %72 %68 %false %55
         %77 = OpPhi %bool %71 %68 %false %55
         %76 = OpPhi %bool %70 %68 %false %55
         %75 = OpPhi %float %69 %68 %23 %55
         %74 = OpPhi %float %float_0 %68 %23 %55
               OpSelectionMerge %80 None
               OpBranchConditional %79 %96 %80
         %80 = OpLabel
         %82 = OpPhi %bool %98 %96 %78 %73
         %81 = OpPhi %float %float_1 %96 %23 %73
               OpSelectionMerge %83 None
               OpBranchConditional %82 %95 %83
         %83 = OpLabel
         %85 = OpPhi %bool %true %95 %77 %80
         %84 = OpPhi %float %float_n1 %95 %75 %80
               OpSelectionMerge %86 None
               OpBranchConditional %85 %93 %86
         %86 = OpLabel
         %88 = OpPhi %bool %true %93 %76 %83
         %87 = OpPhi %float %94 %93 %74 %83
               OpSelectionMerge %89 None
               OpBranchConditional %88 %91 %89
         %89 = OpLabel
         %90 = OpPhi %float %81 %86 %92 %91
               OpStore %40 %90
               OpReturn
         %91 = OpLabel
         %92 = OpPhi %float %87 %86
               OpBranch %89
         %93 = OpLabel
         %94 = OpPhi %float %84 %83
               OpBranch %86
         %95 = OpLabel
               OpBranch %83
         %96 = OpLabel
         %97 = OpIEqual %bool %54 %uint_0
         %98 = OpLogicalNot %bool %97
               OpBranch %80
         %99 = OpLabel
        %100 = OpFUnordLessThan %bool %44 %float_1_2
        %101 = OpLogicalNot %bool %100
               OpSelectionMerge %105 None
               OpBranchConditional %101 %102 %105
        %102 = OpLabel
        %103 = OpFOrdGreaterThan %bool %42 %float_0
        %104 = OpSelect %uint %103 %uint_2 %uint_3
               OpBranch %105
        %105 = OpLabel
        %107 = OpPhi %bool %false %102 %true %99
        %106 = OpPhi %uint %104 %102 %18 %99
               OpSelectionMerge %108 None
               OpBranchConditional %107 %110 %108
        %108 = OpLabel
        %109 = OpPhi %uint %113 %110 %106 %105
               OpBranch %53
        %110 = OpLabel
        %111 = OpFAdd %float %44 %float_1
        %112 = OpFOrdGreaterThan %bool %111 %float_0
        %113 = OpSelect %uint %112 %uint_4 %uint_5
               OpBranch %108
               OpFunctionEnd
[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [bind] subdata [type] [offset] [values ...]
ssbo 0 subdata float 0 -10.0 -10.0 -10.0 -10.0
ssbo 1 subdata float 0 0.2
ssbo 2 subdata float 0 1.5

compute 3 1 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo float 0 0 < 1.00001
probe ssbo float 0 0 > 0.99999

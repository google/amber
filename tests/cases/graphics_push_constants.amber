#!amber
# Copyright 2019 The Amber Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SHADER vertex vtex_shader GLSL
#version 450

layout(push_constant) uniform PushConstants {
  vec2 in_val[4];
} u_pushConstants;

void main() {
  gl_Position = vec4(u_pushConstants.in_val[gl_VertexIndex], 0.0, 1.0);
}
END

SHADER fragment frag_shader GLSL
#version 430
layout(location = 0) out vec4 outColor;

void main() {
  outColor = vec4(0.5, 0.5, 0.5, 1.0);
}
END

BUFFER push_constants DATA_TYPE vec2<float> DATA
-1.0 -1.0
 1.0 -1.0
-1.0  0.0
 1.0  0.0
END

BUFFER framebuffer FORMAT B8G8R8A8_UNORM

PIPELINE graphics pipeline
  ATTACH vtex_shader
  ATTACH frag_shader

  BIND BUFFER push_constants AS push_constant
  BIND BUFFER framebuffer AS color LOCATION 0
  FRAMEBUFFER_SIZE 250 250
END

CLEAR pipeline
RUN pipeline DRAW_RECT POS 0 0 SIZE 250 250

EXPECT framebuffer IDX 0   0 SIZE 250 125 EQ_RGBA 127 127 127 255 TOLERANCE 1 1 1 0
EXPECT framebuffer IDX 0 125 SIZE 250 125 EQ_RGBA   0   0   0   0

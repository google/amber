# Copyright 2019 The Amber Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

[compute shader]
#version 430

layout(set = 0, binding = 0) buffer block0 {
  mat3x2 transform0;
};

layout(push_constant) uniform block1 {
  mat3x2 transform1;
};

layout(set = 0, binding = 2) buffer block3 {
  vec3 test0;
  vec3 test1;
};

void main() {
  test0 = vec3(transform0 * test0, 1.0);
  test1 = vec3(transform1 * test1, 1.0);
}

[test]
# Fill mat3x2 using float
# MatrixStride == 8
ssbo 0:0 subdata mat3x2 0 1.0 0.0 \
                          0.0 1.0 \
                          0.0 1.0
# MatrixStride == 8
uniform mat3x2 0 1.0 0.0 \
                 0.0 1.0 \
                 0.0 1.0

ssbo 0:2 subdata vec3  0 7.3 9.4 -5.8
ssbo 0:2 subdata vec3 16 4.5 6.1 -3.8

compute 1 1 1

tolerance 0.1%

# 3.6 ==        9.4 +    -5.8
#     i.e., test0.y + test0.z
probe ssbo vec3 0:2  0 ~= 7.3 3.6 1.0

# 2.3 ==        6.1 +    -3.8
#     i.e., test1.y + test1.z
probe ssbo vec3 0:2 16 ~= 4.5 2.3 1.0

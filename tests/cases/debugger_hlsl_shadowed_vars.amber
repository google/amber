#!amber
# Copyright 2020 The Amber Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https:#www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SET ENGINE_DATA fence_timeout_ms 1000000

VIRTUAL_FILE "vs.hlsl"
struct VS_OUTPUT {
  float4 pos : SV_POSITION;
};

VS_OUTPUT main(float4 pos : POSITION,
               float4 color : COLOR) {
  float a = 1.0;
  float b = 2.0;
  float c = 3.0;
  float x = a + b + c;
  {
    float a = 3.0;
    float b = 4.0;
    x += a + b + c;
    {
      float a = 6.0;
      x += a + b + c;
    }
    x += a + b + c;
  }
  x += a + b + c;

  VS_OUTPUT vout;
  vout.pos = pos;
  vout.pos.w += x * 0.000001;
  return vout;
}
END

VIRTUAL_FILE "fs.hlsl"
float4 main() : SV_TARGET {
  return float4(1.0, 1.0, 1.0, 1.0);
}
END

SHADER vertex vtex_shader HLSL VIRTUAL_FILE "vs.hlsl"
SHADER fragment frag_shader HLSL VIRTUAL_FILE "fs.hlsl"

BUFFER position_buf DATA_TYPE R8G8_SNORM DATA
# Full frame
-128 -128
 127  127
-128  127
-128 -128
 127  127
 127 -128
END

BUFFER vert_color DATA_TYPE R8G8B8A8_UNORM DATA
255   0   0 255
255   0   0 255
255   0   0 255
255   0   0 255
255   0   0 255
255   0   0 255

  0 255   0 255
  0 255   0 255
  0 255   0 255
  0 255   0 255
  0 255   0 255
  0 255   0 255

  0   0 255 255
  0   0 255 255
  0   0 255 255
  0   0 255 255
  0   0 255 255
  0   0 255 255

127 127 127 255
127 127 127 255
127 127 127 255
127 127 127 255
127 127 127 255
127 127 127 255
END

BUFFER framebuffer FORMAT B8G8R8A8_UNORM

PIPELINE graphics pipeline
  ATTACH vtex_shader
  SHADER_OPTIMIZATION vtex_shader
    --legalize-hlsl
  END

  ATTACH frag_shader
  SHADER_OPTIMIZATION frag_shader
    --legalize-hlsl
  END

  VERTEX_DATA position_buf LOCATION 0
  VERTEX_DATA vert_color LOCATION 1

  BIND BUFFER framebuffer AS color LOCATION 0
END

CLEAR pipeline

DEBUG pipeline DRAW_ARRAY AS TRIANGLE_LIST START_IDX 0 COUNT 6
    THREAD VERTEX_INDEX 0
        EXPECT LOCATION "vs.hlsl" 7 "  float a = 1.0;"
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 8 "  float b = 2.0;"
        EXPECT LOCAL "a" EQ 1.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 9 "  float c = 3.0;"
        EXPECT LOCAL "a" EQ 1.000000
        EXPECT LOCAL "b" EQ 2.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 10 "  float x = a + b + c;"
        EXPECT LOCAL "a" EQ 1.000000
        EXPECT LOCAL "b" EQ 2.000000
        EXPECT LOCAL "c" EQ 3.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 12 "    float a = 3.0;"
        EXPECT LOCAL "c" EQ 3.000000
        EXPECT LOCAL "x" EQ 6.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 13 "    float b = 4.0;"
        EXPECT LOCAL "a" EQ 3.000000
        EXPECT LOCAL "c" EQ 3.000000
        EXPECT LOCAL "x" EQ 6.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 14 "    x += a + b + c;"
        EXPECT LOCAL "a" EQ 3.000000
        EXPECT LOCAL "b" EQ 4.000000
        EXPECT LOCAL "c" EQ 3.000000
        EXPECT LOCAL "x" EQ 6.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 16 "      float a = 6.0;"
        EXPECT LOCAL "b" EQ 4.000000
        EXPECT LOCAL "c" EQ 3.000000
        EXPECT LOCAL "x" EQ 16.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 17 "      x += a + b + c;"
        EXPECT LOCAL "a" EQ 6.000000
        EXPECT LOCAL "b" EQ 4.000000
        EXPECT LOCAL "c" EQ 3.000000
        EXPECT LOCAL "x" EQ 16.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 19 "    x += a + b + c;"
        EXPECT LOCAL "a" EQ 3.000000
        EXPECT LOCAL "b" EQ 4.000000
        EXPECT LOCAL "c" EQ 3.000000
        EXPECT LOCAL "x" EQ 29.000000
        STEP_IN
        EXPECT LOCATION "vs.hlsl" 21 "  x += a + b + c;"
        EXPECT LOCAL "a" EQ 1.000000
        EXPECT LOCAL "b" EQ 2.000000
        EXPECT LOCAL "c" EQ 3.000000
        EXPECT LOCAL "x" EQ 39.000000
        STEP_IN
        EXPECT LOCAL "x" EQ 45.000000
        CONTINUE
    END
END

EXPECT framebuffer IDX 0 0 SIZE 250 250 EQ_RGB 255 255 255

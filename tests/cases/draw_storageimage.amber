#!amber
# Copyright 2019 The Amber Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SHADER vertex vert_shader PASSTHROUGH
SHADER fragment frag_shader_red GLSL
#version 430
layout(location = 0) out vec4 color_out;
void main() {
  color_out = vec4(1.0, 0.0, 0.0, 1.0);
}
END
SHADER fragment frag_shader_tex GLSL
#version 430
layout(location = 0) out vec4 color_out;
uniform layout(set=0, binding=0, rgba8) readonly image2D texture;
void main() {
  ivec2 uv = ivec2(gl_FragCoord.xy);
  color_out = imageLoad(texture, ivec2(gl_FragCoord.xy));
}
END
SHADER compute compute_shader GLSL
#version 430
layout(local_size_x=10,local_size_y=10) in;
uniform layout (set=0, binding=0, rgba8) image2D texture;

void main () {
  ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
  vec4 color = imageLoad(texture, uv) + vec4(0, 1.0, 0, 0);
  imageStore(texture, uv, color);
}
END

BUFFER texture FORMAT R8G8B8A8_UNORM
BUFFER framebuffer FORMAT B8G8R8A8_UNORM

PIPELINE graphics pipeline1
  ATTACH vert_shader
  ATTACH frag_shader_red
  FRAMEBUFFER_SIZE 256 256
  BIND BUFFER texture AS color LOCATION 0
END

PIPELINE graphics pipeline2
  ATTACH vert_shader
  ATTACH frag_shader_tex
  BIND BUFFER texture AS storage_image DESCRIPTOR_SET 0 BINDING 0
  FRAMEBUFFER_SIZE 256 256
  BIND BUFFER framebuffer AS color LOCATION 0
END

PIPELINE compute pipeline3
  ATTACH compute_shader
  BIND BUFFER texture AS storage_image DESCRIPTOR_SET 0 BINDING 0
  FRAMEBUFFER_SIZE 256 256
END

CLEAR_COLOR pipeline1 0 0 255 255
CLEAR pipeline1
RUN pipeline1 DRAW_RECT POS 50 50 SIZE 100 100
RUN pipeline3 5 5 1
CLEAR_COLOR pipeline2 0 255 0 255
CLEAR pipeline2
RUN pipeline2 DRAW_RECT POS 20 20 SIZE  170 170

EXPECT framebuffer IDX 1 1 SIZE 1 1 EQ_RGBA 0 255 0 255
EXPECT framebuffer IDX 21 21 SIZE 1 1 EQ_RGBA 0 255 255 255
EXPECT framebuffer IDX 51 51 SIZE 1 1 EQ_RGBA 255 0 0 255
EXPECT framebuffer IDX 189 189 SIZE 1 1 EQ_RGBA 0 0 255 255

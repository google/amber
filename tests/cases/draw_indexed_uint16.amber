#!amber
# Copyright 2022 The Amber Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

SHADER vertex vert_shader PASSTHROUGH
SHADER fragment frag_shader GLSL
#version 430
layout(location = 0) out vec4 color_out;
void main() {
  color_out = vec4(0.0, 1.0, 0.0, 1.0);
}
END

BUFFER position DATA_TYPE vec4<float> DATA
-1.0  1.0 0.0 1.0
 1.0  1.0 0.0 1.0
 1.0 -1.0 0.0 1.0
-1.0 -1.0 0.0 1.0
END

BUFFER indices DATA_TYPE uint16 DATA
3 2 1 0
END

IMAGE framebuffer FORMAT B8G8R8A8_UNORM DIM_2D WIDTH 64 HEIGHT 64

PIPELINE graphics pipeline
  ATTACH vert_shader
  ATTACH frag_shader
  VERTEX_DATA position LOCATION 0
  INDEX_DATA indices
  FRAMEBUFFER_SIZE 64 64
  BIND BUFFER framebuffer AS color LOCATION 0
END

RUN pipeline DRAW_ARRAY AS TRIANGLE_FAN INDEXED START_IDX 0 COUNT 4
EXPECT framebuffer IDX 0 0 SIZE 64 64 EQ_RGBA 0 255 0 255
